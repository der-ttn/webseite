name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: 'New release'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format v1.2.3"
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag ${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Update package.json version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          VERSION_NO_V="${VERSION#v}"
          npm version $VERSION_NO_V --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore: bump version to $VERSION"
          git tag $VERSION

      - name: Push changes and tag
        run: |
          git push origin main
          git push origin ${{ github.event.inputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}